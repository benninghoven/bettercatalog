#QUERIES

USE COURSECATALOG;
SET @DEPTCODE := 'CPSC';
SET @COURSENUMBER := 131;
SET @COURSELETTER := '';

#LIST ALL COURSES AND THEIR PREREQUISITES
SELECT * FROM COURSE AS C LEFT JOIN COURSEPREREQ AS P ON 
C.DEPTCODE = P.COURSEDEPT AND C.COURSENUM=P.COURSENUM AND C.COURSELETTER = P.COURSELETTER;

#PREREQ
SELECT PREREQDEPT, PREREQNUM, PREREQCOURSELETTER FROM COURSEPREREQ
WHERE COURSEPREREQ.COURSEDEPT = @DEPTCODE AND COURSEPREREQ.COURSENUM = @COURSENUMBER AND COURSEPREREQ.COURSELETTER = @COURSELETTER;

#LIST ALL COURSES THAT ARE A (DIRECT) PREREQISITE OF CLASS SPECIFIED, AND THEIR CLASS DESCRIPTIONS IF AVAILABLE
SELECT * FROM (
SELECT * FROM COURSEPREREQ
WHERE COURSEPREREQ.COURSEDEPT = @DEPTCODE AND COURSEPREREQ.COURSENUM = @COURSENUMBER AND COURSEPREREQ.COURSELETTER = @COURSELETTER
) AS P LEFT JOIN COURSE AS C
ON C.DEPTCODE = P.PREREQDEPT AND C.COURSENUM = P.PREREQNUM AND C.COURSELETTER = P.PREREQCOURSELETTER;
# P.COURSEDEPT = @DEPTCODE AND P.COURSENUM = @COURSENUMBER AND P.COURSELETTER = @COURSELETTER AND  was at the bottom

#LIST ALL COURSES THAT HAVE SPECIFIED CLASS AS A PREREQUISITE (AKA POSTREQS)
SELECT * FROM COURSEPREREQ AS P
WHERE P.PREREQDEPT = @DEPTCODE AND P.PREREQNUM = @COURSENUMBER AND P.PREREQCOURSELETTER = @COURSELETTER;

#LIST ALL POSTREQS, AND CLASS DESCRIPTIONS IF AVAILABLE (WORKS, BUT NOT AS INTENDED)
CREATE VIEW ALTPR AS SELECT 
COURSEDEPT, COURSENUM AS CN, COURSELETTER AS CL, PREREQDEPT, PREREQNUM, PREREQCOURSELETTER, ISCOREQ FROM COURSEPREREQ;

SELECT COURSEDEPT, CN, CL, ISCOREQ FROM (
	SELECT * FROM ALTPR AS P
	WHERE P.PREREQDEPT = @DEPTCODE AND P.PREREQNUM = @COURSENUMBER AND P.PREREQCOURSELETTER = @COURSELETTER
) AS PR LEFT JOIN (
    SELECT DEPTCODE, COURSENUM, COURSELETTER, COURSENAME, COURSEDESCRIPTION, CREDITS, GRADCREDIT, MAJMINREQ FROM COURSE
) AS C ON
C.DEPTCODE = PR.COURSEDEPT AND C.COURSENUM = PR.CN AND C.COURSELETTER = PR.CL;

#LIST ALL COURSES 2 CLASSES ABOVE SPECIFIED - THIS COMMAND IS FOR TESTING ONLY, REPLACED BY RECURSIVE QUERY IN THE PYTHON SCRIPT
SELECT * FROM COURSEPREREQ AS CP JOIN
(SELECT COURSEDEPT AS CD, COURSENUM AS CN , PREREQCOURSELETTER AS PN FROM COURSEPREREQ AS P
WHERE P.PREREQDEPT = @DEPTCODE AND P.PREREQNUM = DEPTNUMBER AND P.PREREQCOURSELETTER = @COURSELETTER) AS FP ON CP.PREREQDEPT = CD AND CP.PREREQNUM = CN AND CP.PREREQCOURSELETTER = PN;

#LIST ALL UNDERGRAD CLASSES AVAILABLE FOR GRAD CREDIT
SELECT * FROM COURSE
WHERE GRADCREDIT = TRUE;



#https://stackoverflow.com/questions/775296/mysql-parameterized-queries




#SEARCH THROUGH A PARTIAL CLASS NAME, NUMBER, OR LETTER
#PARAMATERIZED VERSION: "SELECT DEPTCODE, COURSENUM, COURSELETTER, COURSENAME FROM COURSE WHERE DEPTCODE LIKE CONCAT(UPPER(%s), '%') AND COURSENUM LIKE CONCAT(%s, '%') AND COURSELETTER LIKE CONCAT(UPPER(%s), '%');"
#USE INPUT ORDER DEPT, NUMBER, LETTER

#SQL PARAMS (FOR TESTING)
SET @PARTIALDEPT = 'cps';
SET @PARTIALNUM = 3;
SET @LETTER = '';

SELECT DEPTCODE, COURSENUM, COURSELETTER, COURSENAME FROM COURSE WHERE DEPTCODE LIKE CONCAT(UPPER(@PARTIALDEPT), '%') AND COURSENUM LIKE CONCAT(@PARTIALNUM, '%') AND COURSELETTER LIKE CONCAT(UPPER(@LETTER), '%');

#SEARCH BASED ON CLASSNAME
#PARAMATERIZED VERSION: "SELECT DEPTCODE, COURSENUM, COURSELETTER, COURSENAME FROM COURSE WHERE UPPER(COURSENAME) LIKE CONCAT('%', UPPER(%s), '%');"
SET @PARTIALCLASSNAME = 'web';

SELECT DEPTCODE, COURSENUM, COURSELETTER, COURSENAME FROM COURSE WHERE UPPER(COURSENAME) LIKE CONCAT('%', UPPER(@PARTIALCLASSNAME), '%');
